@page "/login"
@using ArggonStores.Web.Models
@using ArggonStores.Web.Services
@inject IAuthService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Sign In - ArggonStores Admin</PageTitle>

<link href="~/css/login.css" rel="stylesheet" />

<div class="login-container">
    <div class="login-card">
        <div class="login-header">
            <div class="logo">
                <div class="logo-icon">AS</div>
            </div>
            <h1 class="login-title">Welcome Back</h1>
            <p class="login-subtitle">Sign in to your admin account</p>
        </div>

        <div class="login-form">
            <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                <DataAnnotationsValidator />
                
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-error">
                        <div class="alert-icon">âš </div>
                        <span>@errorMessage</span>
                    </div>
                }

                <div class="form-group">
                    <label for="email" class="form-label">Email Address</label>
                    <InputText @bind-Value="loginModel.Email" class="form-input" id="email" type="email" placeholder="Enter your email" />
                    <ValidationMessage For="@(() => loginModel.Email)" class="form-error" />
                </div>

                <div class="form-group">
                    <label for="password" class="form-label">Password</label>
                    <InputText @bind-Value="loginModel.Password" class="form-input" id="password" type="password" placeholder="Enter your password" />
                    <ValidationMessage For="@(() => loginModel.Password)" class="form-error" />
                </div>

                <button type="submit" class="btn btn-primary" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <div class="spinner"></div>
                        <span>Signing In...</span>
                    }
                    else
                    {
                        <span>Sign In</span>
                    }
                </button>
            </EditForm>

            <div class="login-footer">
                <p>Don't have an account? <a href="/register" class="link">Create one here</a></p>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private bool isLoading = false;
    private string errorMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Redirect to dashboard if already authenticated
        var isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            Navigation.NavigateTo("/dashboard");
        }
    }

    private async Task HandleLogin()
    {
        if (isLoading) return;

        isLoading = true;
        errorMessage = string.Empty;
        StateHasChanged();

        try
        {
            var result = await AuthService.LoginAsync(loginModel);
            
            if (result.IsSuccess)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = result.Message;
            }
        }
        catch (Exception)
        {
            errorMessage = "An unexpected error occurred. Please try again.";
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }
}